
// This file has been generated by the GUI designer. Do not modify.
namespace Workwear.Views.Tools
{
	public partial class DataBaseSettingsView
	{
		private global::Gtk.VBox vbox1;

		private global::Gtk.HBox hbox2;

		private global::Gtk.Button buttonSave;

		private global::Gtk.Button buttonCancel;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.Table table1;

		private global::Gamma.GtkWidgets.yCheckButton checkCheckBalances;

		private global::Gamma.Widgets.yEnumComboBox ComboExtendPeriod;

		private global::Gamma.Widgets.yEnumComboBox ComboShirtExpluatacion;

		private global::QS.Widgets.GtkUI.DatePicker dateEditLock;

		private global::Gtk.Label label1;

		private global::Gtk.Label label4;

		private global::Gamma.GtkWidgets.yLabel labelEditLockDate;

		private global::QS.Widgets.GtkUI.DatePicker startDateOfOperations;

		private global::Gamma.GtkWidgets.yCheckButton ycheckAutoWriteoff;

		private global::Gamma.GtkWidgets.yCheckButton ycheckCollapseDuplicateIssuanceSheet;

		private global::Gamma.GtkWidgets.yCheckButton ycheckCollectiveIssueWithPersonal;

		private global::Gamma.GtkWidgets.yEntry yentryCurrency;

		private global::Gamma.GtkWidgets.yHBox yhbox1;

		private global::Gamma.GtkWidgets.ySpinButton spbutAheadOfShedule;

		private global::Gamma.GtkWidgets.yLabel ylabel2;

		private global::Gamma.GtkWidgets.yHBox yhbox2;

		private global::Gamma.GtkWidgets.yCheckButton ycheckbuttonIssue;

		private global::Gamma.GtkWidgets.yCheckButton ycheckbuttonReturn;

		private global::Gamma.GtkWidgets.yLabel ylabel1;

		private global::Gamma.GtkWidgets.yLabel ylabel3;

		private global::Gamma.GtkWidgets.yLabel ylabel4;

		private global::Gamma.GtkWidgets.yLabel ylabel5;

		private global::Gamma.GtkWidgets.yLabel ylabel6;

		private global::Gamma.GtkWidgets.yLabel ylabel7;

		private global::Gamma.GtkWidgets.yLabel ylabelCollectiveIssueWithPersonal;

		private global::Gamma.GtkWidgets.yLabel ylabelstartDateOfOperations;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget Workwear.Views.Tools.DataBaseSettingsView
			global::Stetic.BinContainer.Attach(this);
			this.Name = "Workwear.Views.Tools.DataBaseSettingsView";
			// Container child Workwear.Views.Tools.DataBaseSettingsView.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.buttonSave = new global::Gtk.Button();
			this.buttonSave.CanFocus = true;
			this.buttonSave.Name = "buttonSave";
			this.buttonSave.UseUnderline = true;
			this.buttonSave.Label = global::Mono.Unix.Catalog.GetString("Сохранить");
			global::Gtk.Image w1 = new global::Gtk.Image();
			w1.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-save", global::Gtk.IconSize.Menu);
			this.buttonSave.Image = w1;
			this.hbox2.Add(this.buttonSave);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.buttonSave]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.buttonCancel = new global::Gtk.Button();
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = global::Mono.Unix.Catalog.GetString("Отменить");
			global::Gtk.Image w3 = new global::Gtk.Image();
			w3.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-revert-to-saved", global::Gtk.IconSize.Menu);
			this.buttonCancel.Image = w3;
			this.hbox2.Add(this.buttonCancel);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.buttonCancel]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			this.vbox1.Add(this.hbox2);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox2]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			global::Gtk.Viewport w6 = new global::Gtk.Viewport();
			w6.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child GtkViewport.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table(((uint)(11)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.checkCheckBalances = new global::Gamma.GtkWidgets.yCheckButton();
			this.checkCheckBalances.CanFocus = true;
			this.checkCheckBalances.Name = "checkCheckBalances";
			this.checkCheckBalances.Label = global::Mono.Unix.Catalog.GetString("Включено");
			this.checkCheckBalances.DrawIndicator = true;
			this.checkCheckBalances.UseUnderline = true;
			this.table1.Add(this.checkCheckBalances);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1[this.checkCheckBalances]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ComboExtendPeriod = new global::Gamma.Widgets.yEnumComboBox();
			this.ComboExtendPeriod.Name = "ComboExtendPeriod";
			this.ComboExtendPeriod.ShowSpecialStateAll = false;
			this.ComboExtendPeriod.ShowSpecialStateNot = false;
			this.ComboExtendPeriod.UseShortTitle = false;
			this.ComboExtendPeriod.DefaultFirst = false;
			this.table1.Add(this.ComboExtendPeriod);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1[this.ComboExtendPeriod]));
			w8.TopAttach = ((uint)(5));
			w8.BottomAttach = ((uint)(6));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ComboShirtExpluatacion = new global::Gamma.Widgets.yEnumComboBox();
			this.ComboShirtExpluatacion.Name = "ComboShirtExpluatacion";
			this.ComboShirtExpluatacion.ShowSpecialStateAll = false;
			this.ComboShirtExpluatacion.ShowSpecialStateNot = false;
			this.ComboShirtExpluatacion.UseShortTitle = false;
			this.ComboShirtExpluatacion.DefaultFirst = false;
			this.table1.Add(this.ComboShirtExpluatacion);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1[this.ComboShirtExpluatacion]));
			w9.TopAttach = ((uint)(4));
			w9.BottomAttach = ((uint)(5));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.dateEditLock = new global::QS.Widgets.GtkUI.DatePicker();
			this.dateEditLock.TooltipMarkup = "Устанавливает дату, начиная с которой и ранее редактирование документов и других " +
				"учетных данных будет запрещено. Используется для закрытия отчетного периода с це" +
				"лью предотвращения случайных или несанкционированных изменений в уже утвержденны" +
				"х данных.";
			this.dateEditLock.Events = ((global::Gdk.EventMask)(256));
			this.dateEditLock.Name = "dateEditLock";
			this.dateEditLock.WithTime = false;
			this.dateEditLock.HideCalendarButton = false;
			this.dateEditLock.Date = new global::System.DateTime(0);
			this.dateEditLock.IsEditable = true;
			this.dateEditLock.AutoSeparation = true;
			this.dateEditLock.HideButtonClearDate = false;
			this.table1.Add(this.dateEditLock);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1[this.dateEditLock]));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label();
			this.label1.TooltipMarkup = @"Определяет, будет ли автоматически списываться выданная сотруднику спецодежда (или имущество) по окончании срока носки. Настройка применяется только к новым выдачам — ранее оформленные выдачи сохранят свои параметры. При необходимости автосписание для уже выданных позиций можно изменить вручную на вкладке ""История выдач"" в карточке сотрудника для каждой выдачи.";
			this.label1.Name = "label1";
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString("Авто списание с сотрудника:");
			this.table1.Add(this.label1);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1[this.label1]));
			w11.TopAttach = ((uint)(1));
			w11.BottomAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label4 = new global::Gtk.Label();
			this.label4.Name = "label4";
			this.label4.Xalign = 1F;
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString("Разрешить выдачу раньше срока на:");
			this.table1.Add(this.label4);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1[this.label4]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(4));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelEditLockDate = new global::Gamma.GtkWidgets.yLabel();
			this.labelEditLockDate.TooltipMarkup = "Устанавливает дату, начиная с которой и ранее редактирование документов и других " +
				"учетных данных будет запрещено. Используется для закрытия отчетного периода с це" +
				"лью предотвращения случайных или несанкционированных изменений в уже утвержденны" +
				"х данных.";
			this.labelEditLockDate.Name = "labelEditLockDate";
			this.labelEditLockDate.Xalign = 1F;
			this.labelEditLockDate.LabelProp = global::Mono.Unix.Catalog.GetString("Дата запрета редактирования:");
			this.table1.Add(this.labelEditLockDate);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1[this.labelEditLockDate]));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.startDateOfOperations = new global::QS.Widgets.GtkUI.DatePicker();
			this.startDateOfOperations.TooltipMarkup = "Устанавливает дату, с которой будут отображаться операции на оборотной стороне ка" +
				"рточки сотрудника";
			this.startDateOfOperations.Events = ((global::Gdk.EventMask)(256));
			this.startDateOfOperations.Name = "startDateOfOperations";
			this.startDateOfOperations.WithTime = false;
			this.startDateOfOperations.HideCalendarButton = false;
			this.startDateOfOperations.Date = new global::System.DateTime(0);
			this.startDateOfOperations.IsEditable = true;
			this.startDateOfOperations.AutoSeparation = true;
			this.startDateOfOperations.HideButtonClearDate = false;
			this.table1.Add(this.startDateOfOperations);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1[this.startDateOfOperations]));
			w14.TopAttach = ((uint)(10));
			w14.BottomAttach = ((uint)(11));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ycheckAutoWriteoff = new global::Gamma.GtkWidgets.yCheckButton();
			this.ycheckAutoWriteoff.TooltipMarkup = @"Определяет, будет ли автоматически списываться выданная сотруднику спецодежда (или имущество) по окончании срока носки. Настройка применяется только к новым выдачам — ранее оформленные выдачи сохранят свои параметры. При необходимости автосписание для уже выданных позиций можно изменить вручную на вкладке ""История выдач"" в карточке сотрудника для каждой выдачи.";
			this.ycheckAutoWriteoff.CanFocus = true;
			this.ycheckAutoWriteoff.Name = "ycheckAutoWriteoff";
			this.ycheckAutoWriteoff.Label = global::Mono.Unix.Catalog.GetString("Включено");
			this.ycheckAutoWriteoff.DrawIndicator = true;
			this.ycheckAutoWriteoff.UseUnderline = true;
			this.table1.Add(this.ycheckAutoWriteoff);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1[this.ycheckAutoWriteoff]));
			w15.TopAttach = ((uint)(1));
			w15.BottomAttach = ((uint)(2));
			w15.LeftAttach = ((uint)(1));
			w15.RightAttach = ((uint)(2));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ycheckCollapseDuplicateIssuanceSheet = new global::Gamma.GtkWidgets.yCheckButton();
			this.ycheckCollapseDuplicateIssuanceSheet.Name = "ycheckCollapseDuplicateIssuanceSheet";
			this.ycheckCollapseDuplicateIssuanceSheet.Label = global::Mono.Unix.Catalog.GetString("Включено");
			this.ycheckCollapseDuplicateIssuanceSheet.Active = true;
			this.ycheckCollapseDuplicateIssuanceSheet.DrawIndicator = true;
			this.ycheckCollapseDuplicateIssuanceSheet.UseUnderline = true;
			this.table1.Add(this.ycheckCollapseDuplicateIssuanceSheet);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1[this.ycheckCollapseDuplicateIssuanceSheet]));
			w16.TopAttach = ((uint)(7));
			w16.BottomAttach = ((uint)(8));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ycheckCollectiveIssueWithPersonal = new global::Gamma.GtkWidgets.yCheckButton();
			this.ycheckCollectiveIssueWithPersonal.Name = "ycheckCollectiveIssueWithPersonal";
			this.ycheckCollectiveIssueWithPersonal.Label = global::Mono.Unix.Catalog.GetString("Включено");
			this.ycheckCollectiveIssueWithPersonal.DrawIndicator = true;
			this.ycheckCollectiveIssueWithPersonal.UseUnderline = true;
			this.table1.Add(this.ycheckCollectiveIssueWithPersonal);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table1[this.ycheckCollectiveIssueWithPersonal]));
			w17.TopAttach = ((uint)(6));
			w17.BottomAttach = ((uint)(7));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.yentryCurrency = new global::Gamma.GtkWidgets.yEntry();
			this.yentryCurrency.CanFocus = true;
			this.yentryCurrency.Name = "yentryCurrency";
			this.yentryCurrency.IsEditable = true;
			this.yentryCurrency.MaxLength = 20;
			this.yentryCurrency.InvisibleChar = '●';
			this.table1.Add(this.yentryCurrency);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table1[this.yentryCurrency]));
			w18.TopAttach = ((uint)(8));
			w18.BottomAttach = ((uint)(9));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.yhbox1 = new global::Gamma.GtkWidgets.yHBox();
			this.yhbox1.Name = "yhbox1";
			this.yhbox1.Spacing = 6;
			// Container child yhbox1.Gtk.Box+BoxChild
			this.spbutAheadOfShedule = new global::Gamma.GtkWidgets.ySpinButton(0D, 356D, 1D);
			this.spbutAheadOfShedule.CanFocus = true;
			this.spbutAheadOfShedule.Name = "spbutAheadOfShedule";
			this.spbutAheadOfShedule.Adjustment.PageIncrement = 10D;
			this.spbutAheadOfShedule.ClimbRate = 1D;
			this.spbutAheadOfShedule.Numeric = true;
			this.spbutAheadOfShedule.ValueAsDecimal = 0m;
			this.spbutAheadOfShedule.ValueAsInt = 0;
			this.yhbox1.Add(this.spbutAheadOfShedule);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.yhbox1[this.spbutAheadOfShedule]));
			w19.Position = 0;
			// Container child yhbox1.Gtk.Box+BoxChild
			this.ylabel2 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel2.Name = "ylabel2";
			this.ylabel2.LabelProp = global::Mono.Unix.Catalog.GetString("дней");
			this.yhbox1.Add(this.ylabel2);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.yhbox1[this.ylabel2]));
			w20.Position = 1;
			w20.Expand = false;
			w20.Fill = false;
			this.table1.Add(this.yhbox1);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table1[this.yhbox1]));
			w21.TopAttach = ((uint)(3));
			w21.BottomAttach = ((uint)(4));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.yhbox2 = new global::Gamma.GtkWidgets.yHBox();
			this.yhbox2.Name = "yhbox2";
			this.yhbox2.Spacing = 6;
			// Container child yhbox2.Gtk.Box+BoxChild
			this.ycheckbuttonIssue = new global::Gamma.GtkWidgets.yCheckButton();
			this.ycheckbuttonIssue.CanFocus = true;
			this.ycheckbuttonIssue.Name = "ycheckbuttonIssue";
			this.ycheckbuttonIssue.Label = global::Mono.Unix.Catalog.GetString("Для выданного");
			this.ycheckbuttonIssue.DrawIndicator = true;
			this.ycheckbuttonIssue.UseUnderline = true;
			this.yhbox2.Add(this.ycheckbuttonIssue);
			global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.yhbox2[this.ycheckbuttonIssue]));
			w22.Position = 0;
			w22.Expand = false;
			w22.Fill = false;
			// Container child yhbox2.Gtk.Box+BoxChild
			this.ycheckbuttonReturn = new global::Gamma.GtkWidgets.yCheckButton();
			this.ycheckbuttonReturn.CanFocus = true;
			this.ycheckbuttonReturn.Name = "ycheckbuttonReturn";
			this.ycheckbuttonReturn.Label = global::Mono.Unix.Catalog.GetString("Для возвращенного");
			this.ycheckbuttonReturn.DrawIndicator = true;
			this.ycheckbuttonReturn.UseUnderline = true;
			this.yhbox2.Add(this.ycheckbuttonReturn);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.yhbox2[this.ycheckbuttonReturn]));
			w23.Position = 1;
			w23.Expand = false;
			w23.Fill = false;
			this.table1.Add(this.yhbox2);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.table1[this.yhbox2]));
			w24.TopAttach = ((uint)(9));
			w24.BottomAttach = ((uint)(10));
			w24.LeftAttach = ((uint)(1));
			w24.RightAttach = ((uint)(2));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel1 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel1.Name = "ylabel1";
			this.ylabel1.Xalign = 1F;
			this.ylabel1.LabelProp = global::Mono.Unix.Catalog.GetString("Проверять остатки при расходе со склада:");
			this.table1.Add(this.ylabel1);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel1]));
			w25.TopAttach = ((uint)(2));
			w25.BottomAttach = ((uint)(3));
			w25.XOptions = ((global::Gtk.AttachOptions)(4));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel3 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel3.Name = "ylabel3";
			this.ylabel3.Xalign = 1F;
			this.ylabel3.LabelProp = global::Mono.Unix.Catalog.GetString("Переносить дату начала эксплуатации:");
			this.table1.Add(this.ylabel3);
			global::Gtk.Table.TableChild w26 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel3]));
			w26.TopAttach = ((uint)(4));
			w26.BottomAttach = ((uint)(5));
			w26.XOptions = ((global::Gtk.AttachOptions)(4));
			w26.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel4 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel4.Name = "ylabel4";
			this.ylabel4.Xalign = 1F;
			this.ylabel4.LabelProp = global::Mono.Unix.Catalog.GetString("Увеличить период эксплуатации пропорционально количеству:");
			this.table1.Add(this.ylabel4);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel4]));
			w27.TopAttach = ((uint)(5));
			w27.BottomAttach = ((uint)(6));
			w27.XOptions = ((global::Gtk.AttachOptions)(4));
			w27.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel5 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel5.Name = "ylabel5";
			this.ylabel5.Xalign = 1F;
			this.ylabel5.LabelProp = global::Mono.Unix.Catalog.GetString("Сворачивать дублирующуюся информацию в ведомости:");
			this.table1.Add(this.ylabel5);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel5]));
			w28.TopAttach = ((uint)(7));
			w28.BottomAttach = ((uint)(8));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel6 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel6.Name = "ylabel6";
			this.ylabel6.Xalign = 1F;
			this.ylabel6.LabelProp = global::Mono.Unix.Catalog.GetString("Используемая валюта:");
			this.table1.Add(this.ylabel6);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel6]));
			w29.TopAttach = ((uint)(8));
			w29.BottomAttach = ((uint)(9));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabel7 = new global::Gamma.GtkWidgets.yLabel();
			this.ylabel7.Name = "ylabel7";
			this.ylabel7.Xalign = 1F;
			this.ylabel7.LabelProp = global::Mono.Unix.Catalog.GetString("На обороте карточки номер документа вместо подписи:");
			this.table1.Add(this.ylabel7);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabel7]));
			w30.TopAttach = ((uint)(9));
			w30.BottomAttach = ((uint)(10));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabelCollectiveIssueWithPersonal = new global::Gamma.GtkWidgets.yLabel();
			this.ylabelCollectiveIssueWithPersonal.Name = "ylabelCollectiveIssueWithPersonal";
			this.ylabelCollectiveIssueWithPersonal.Xalign = 1F;
			this.ylabelCollectiveIssueWithPersonal.LabelProp = global::Mono.Unix.Catalog.GetString("При персональной выдаче добавлять позиции коллективной:");
			this.table1.Add(this.ylabelCollectiveIssueWithPersonal);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabelCollectiveIssueWithPersonal]));
			w31.TopAttach = ((uint)(6));
			w31.BottomAttach = ((uint)(7));
			w31.XOptions = ((global::Gtk.AttachOptions)(4));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ylabelstartDateOfOperations = new global::Gamma.GtkWidgets.yLabel();
			this.ylabelstartDateOfOperations.Name = "ylabelstartDateOfOperations";
			this.ylabelstartDateOfOperations.Xalign = 1F;
			this.ylabelstartDateOfOperations.LabelProp = global::Mono.Unix.Catalog.GetString("История выдач на обороте карточки с даты:");
			this.table1.Add(this.ylabelstartDateOfOperations);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.table1[this.ylabelstartDateOfOperations]));
			w32.TopAttach = ((uint)(10));
			w32.BottomAttach = ((uint)(11));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			w6.Add(this.table1);
			this.GtkScrolledWindow.Add(w6);
			this.vbox1.Add(this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w35 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow]));
			w35.Position = 1;
			this.Add(this.vbox1);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
		}
	}
}
